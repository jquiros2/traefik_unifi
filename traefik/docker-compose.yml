version: "3.5"

services:
  traefik:
    container_name: traefik_main
    restart: unless-stopped
    build: .
    command:
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --providers.docker
      - --log.level=DEBUG
      - --certificatesresolvers.leresolver.acme.httpchallenge=true
      - --certificatesresolvers.leresolver.acme.email=${le_email} #Set your email address here, is for the generation of SSL certificates with Let's Encrypt. 
      - --certificatesresolvers.leresolver.acme.storage=./shared/acme.json
      - --certificatesresolvers.leresolver.acme.httpchallenge.entrypoint=web
      - --api.dashboard=true
      - --providers.file.directory=/etc/traefik/conf
      - --providers.file.watch=true
      - --serversTransport.insecureSkipVerify=true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./shared:/shared"
      - "./users:/users"
#      - "./configuration/:/configuration/"
      - "./certs/:/certs/"
    labels:
      - "traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.entrypoints=web"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.routers.api.rule=PathPrefix(`/api`) || PathPrefix(`/dashboard`)"
      - "traefik.http.routers.traefik-dashboard.service=api@internal"
      - "traefik.http.routers.api.middlewares=dash-auth"
      - "traefik.http.middlewares.dash-auth.basicauth.usersfile=./users" #make your users file using htpasswd
      - "traefik.http.routers.traefik-dashboard.middlewares=dash-auth"
      - "traefik.http.routers.traefik-dashboard.rule=Host(`${main_host}`) && (PathPrefix(`/dashboard`) || PathPrefix(`/api`))"
      - "traefik.http.routers.traefik-dashboard.entrypoints=websecure"
      - "traefik.http.routers.traefik-dashboard.tls.certresolver=leresolver"
    networks:
      - traefik_proxy_unifi

#uncomment following lines if you want portainer
#  portainer:
#    image: portainer/portainer-ce:latest
#    command: -H unix:///var/run/docker.sock
#    restart: unless-stopped
#    volumes:
#      - "/var/run/docker.sock:/var/run/docker.sock"
#      - "./data:/data"
#    labels:
#      # Frontend
#      - "traefik.enable=true"
#      - "traefik.http.routers.frontend.rule=Host(`${main_host}`)"
#      - "traefik.http.routers.frontend.entrypoints=websecure"
#      - "traefik.http.services.frontend.loadbalancer.server.port=9000"
#      - "traefik.http.routers.frontend.service=frontend"
#      - "traefik.http.routers.frontend.tls.certresolver=leresolver"
#    networks:
#      - traefik_net

#volumes:
#  portainer_data:

networks:
  traefik_proxy_unifi:
    driver: bridge
  # others_traefik_net:
  #   driver: bridge
